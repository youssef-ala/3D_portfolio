/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: unfunny_valentine (https://sketchfab.com/sungsung)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ancient-egypt-civilization-island-downloadable-ca55191a82684ea5be051d326abd1217
Title: Ancient Egypt civilization island (Downloadable)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/ancient_egypt_civilization_island_downloadable.glb')
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.171}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[-7.268, 7.693, -1.827]}
            rotation={[0.273, 0, 0]}
            scale={[0.313, 0.459, 0.435]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              material={materials['Material.009']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_5.geometry}
              material={materials['Material.008']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_6.geometry}
              material={materials['Material.001']}
            />
          </group>
          <group
            position={[-0.947, 5.507, 6.759]}
            rotation={[0.996, -0.643, 0.211]}
            scale={[0.041, 0.06, 0.057]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_14.geometry}
              material={materials['Material.001']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_15.geometry}
              material={materials['Material.004']}
            />
          </group>
          <group
            position={[8.986, 4.346, -1.535]}
            rotation={[-0.056, -0.798, -0.622]}
            scale={[0.201, 0.294, 0.279]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_17.geometry}
              material={materials['Material.001']}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_18.geometry}
              material={materials['Material.004']}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_8.geometry}
            material={materials['seagull.001CleanedMaterial']}
            position={[-5.109, 9.095, 6.517]}
            rotation={[2.212, 0.23, 1.277]}
            scale={0.778}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_10.geometry}
            material={materials['fire.003CleanedMaterial']}
            position={[-3.312, 9.295, -9.144]}
            rotation={[Math.PI / 2, 0, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_12.geometry}
            material={materials['Material.007']}
            position={[0, -1.12, 0]}
            scale={[14.924, 2.833, 14.924]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_20.geometry}
            material={materials['Material.009']}
            position={[-2.721, 7.124, 6.262]}
            rotation={[1.072, 0.419, 0.092]}
            scale={0.122}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_22.geometry}
            material={materials['Material.009']}
            position={[2.359, 5.257, 6.273]}
            rotation={[0.24, 0, 0]}
            scale={0.445}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_24.geometry}
            material={materials['Material.009']}
            position={[-3.334, 7.253, 6.273]}
            rotation={[0.24, 0, 0]}
            scale={0.445}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_26.geometry}
            material={materials['Material.002']}
            position={[0, 4.568, -3.558]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[2.475, 2.475, 3.538]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_28.geometry}
            material={materials['Material.002']}
            position={[0, 4.579, 3.955]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[1.053, 1.099, 1.204]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_30.geometry}
            material={materials['Material.002']}
            position={[-2.832, 3.826, 6.015]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.819, 0.753, 1.165]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_32.geometry}
            material={materials['Material.006']}
            position={[0, 0.312, 10.625]}
            rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            scale={[5.62, 6.316, 4.459]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_34.geometry}
            material={materials['Material.006']}
            position={[0, 4.801, -1.435]}
            scale={[16.128, 11.656, 16.128]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/ancient_egypt_civilization_island_downloadable.glb')
